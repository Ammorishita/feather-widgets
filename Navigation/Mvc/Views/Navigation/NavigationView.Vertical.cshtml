@model Navigation.Mvc.Models.INavigationModel
@using Navigation.Mvc.Models;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;

@*Add scripts and stylesheets*@
<link rel="stylesheet" href='@Url.WidgetContent("Mvc/Scripts/Bootstrap/css/bootstrap.min.css")'>
<link rel="stylesheet" href='@Url.WidgetContent("Mvc/Styles/Navigation.css")'>
@if (!SitefinityContext.IsBackend)
{
<script type="text/javascript" src="https://code.jquery.com/jquery-1.8.3.min.js" ></script>
}
<script type="text/javascript" src='@Url.WidgetContent("Mvc/Scripts/Navigation.js")'></script>

<div class="@Model.CssClass">

    <button type="button" class="sfNavToggle"></button>
    @Html.Action("GetView", new { viewName = "Dropdown", model= Model})

    <ul class="nav nav-pills nav-stacked sfVertical sfNav">
        @foreach (var node in Model.Nodes)
        {
            @RenderSubLevelsRecursive(node);
        }
    </ul>
</div>

@*Here is specified the rendering for the sub levels*@
@helper RenderSubLevelsRecursive(NodeViewModel node)
{
    <li>
        <a class="@GetClass(node)" href="@node.Url" target="@node.LinkTarget">@node.Title</a>

        @if (node.ChildNodes.Count > 0)
        {
            <ul class="group nav nav-pills nav-stacked" >
                @foreach (var childNode in node.ChildNodes)
                {
                    @RenderSubLevelsRecursive(childNode)
                }
            </ul>            
        }
    </li>
}

@*Resolves the class that will be added for each node depending whether it is selected*@
@helper GetClass(NodeViewModel node)
{
    if (node.IsCurrentlyOpened)
    {
        @Html.Raw("btn-primary");
    }
    else if (node.HasChildOpen)
    {
        @Html.Raw("active");
    }
}
