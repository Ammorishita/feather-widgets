@model Telerik.Sitefinity.Frontend.Search.Mvc.Models.ISearchResultsModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Search.Mvc.Models;
@using Telerik.Sitefinity.Modules.Pages;

<div class=" @Model.CssClass">

                <h1>@Model.Results.TotalCount @Html.Raw(Model.ResultText)</h1>

                <div>
                 
                @if(Model.AllowSorting)
                {
                   
                    @Html.DropDownList("UserSort",
                         new[]
                         {
                              new SelectListItem { Text="Relevance", Value= OrderByOptions.Relevance.ToString(), Selected = OrderByOptions.Relevance==Model.OrderBy },
                              new SelectListItem { Text="Newest first", Value= OrderByOptions.Newest.ToString(), Selected = OrderByOptions.Newest==Model.OrderBy },
                              new SelectListItem { Text="Oldest first", Value= OrderByOptions.Oldest.ToString(), Selected = OrderByOptions.Oldest==Model.OrderBy },
                              new SelectListItem { Text="New-modified first", Value= OrderByOptions.NewModified.ToString(), Selected = OrderByOptions.NewModified==Model.OrderBy }
                         }
                    )
                }
                </div>
            
            @if(Model.Languages.Length > 1)
            {
                <div>
                    <span>@Html.Resource("ChangeResultsLanguageLabel") </span>
                    @for (var i = 0; i < Model.Languages.Length; i++)
                    {
                        <a href="@(String.Format(ViewBag.LanguageSearchUrlTemplate, Model.Languages[i].Name))">@Model.Languages[i].DisplayName</a>
                        if (i < Model.Languages.Length - 2)
                        {
                            <span>, </span>
                        }
                        else if (i == Model.Languages.Length - 2)
                        {
                            <span> @Html.Resource("OrLabel") </span>
                        }
                    }
                </div>
            }            

            <ul id="search-results">
                @foreach (var item in Model.Results.Data)
                {
                    <li>
                        <h3><a href="@item.GetValue("Link")">@item.GetValue("Title")</a></h3>
                        <p>@Html.Raw(item.GetValue("HighLighterResult"))</p>
                        <a href="@item.GetValue("Link")">@item.GetValue("Link")</a>
                    </li>
                }

                @if (Model.DisplayMode == ListDisplayMode.Paging && Model.Results.TotalCount != null && Model.Results.TotalCount > 1)
                {
                    @Html.Action("Index", "ContentPager", new
                    {
                        currentPage = Model.CurrentPage,
                        totalPagesCount = Model.TotalPagesCount,
                        redirectUrlTemplate = ViewBag.RedirectPageUrlTemplate
                    })
                }
            </ul>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        //Dropdownlist Selectedchange event
        $("#UserSort").change(function (value) {
            var selectedValue = $(value.currentTarget).val();
            var url = getResultsUrl(selectedValue);
            window.location.search = url;
        });

        // Returns url with all needed parameters
        function getResultsUrl(orderBy, language) {
            var orderByValue = orderBy || '@Request.QueryString["orderBy"]';
            var languageValue = language || '@Request.QueryString["language"]';

            var orderByParam = orderByValue ? '&orderBy=' + orderByValue : '';
            var languageParam = languageValue ? '&language=' + languageValue : '';

            return '?indexCatalogue=' + '@Request.QueryString["indexCatalogue"]' + '&' +
                'searchQuery=' + '@Request.QueryString["searchQuery"]' + '&' +
                'wordsMode=' + '@Request.QueryString["wordsMode"]' +
                orderByParam +
                languageParam;
        }
    });
</script>
