@model Telerik.Sitefinity.Frontend.Search.Mvc.Models.ISearchResultsModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Search.Mvc.Models;
@using Telerik.Sitefinity.Modules.Pages;

<link rel="stylesheet" href="http://cdn.kendostatic.com/2014.3.1119/styles/kendo.common-bootstrap.min.css" />
<link rel="stylesheet" href="http://cdn.kendostatic.com/2014.3.1119/styles/kendo.bootstrap.min.css" />

@Html.Script(ScriptRef.JQuery)
@Html.Script(ScriptRef.KendoAll)


<script type="text/x-kendo-tmpl" id="template">
    <div class="row" style="margin-bottom: 10px;">
	   
		<h3><a href="#=Fields.filter(function (chain) {
    return chain.Name === "Link";
})[0].Value#">#=Fields.filter(function (chain) {
    return chain.Name === "Title";
})[0].Value#</a></h3>

		<p>#=Fields.filter(function (chain) {return chain.Name === "HighLighterResult";})[0].Value#</p>
		
		<a href="#=Fields.filter(function (chain) {
    return chain.Name === "Link";
})[0].Value#">#=Fields.filter(function (chain) {
    return chain.Name === "Link";
})[0].Value#</a>
     </div>
</script>

<section class="section">
    <div class="container">
        <div class="col-md-8 col-md-offset-2 row--border">
            <div class="row text-center">
                <h1><span>@Model.Results.TotalCount &nbsp;</span>@Html.Raw(Model.ResultText)</h1>
                @if(Model.AllowSorting)
                {
                    @Html.DropDownList("UserSort",
                         new[]
                         {
                              new SelectListItem { Text="Relevance", Value= OrderByOptions.Relevance.ToString(), Selected = OrderByOptions.Relevance==Model.OrderBy },
                              new SelectListItem { Text="Newest first", Value= OrderByOptions.Newest.ToString(), Selected = OrderByOptions.Newest==Model.OrderBy },
                              new SelectListItem { Text="Oldest first", Value= OrderByOptions.Oldest.ToString(), Selected = OrderByOptions.Oldest==Model.OrderBy },
                              new SelectListItem { Text="New-modified first", Value= OrderByOptions.NewModified.ToString(), Selected = OrderByOptions.NewModified==Model.OrderBy }
                         }
                    )
                }
            </div>

            <div id="search-results"> </div>
			 <div id="pager" class="k-pager-wrap"></div>

        </div>
    </div>
</section>

<script type="text/javascript">
    $(document).ready(function () {
        var dataSource = new kendo.data.DataSource({
	
            transport: {
                read: {
                    url: '@Url.Action("Results", "SearchResults", new {searchQuery = Request.QueryString["searchQuery"], indexCatalogue = Request.QueryString["indexCatalogue"]})',
                    dataType: 'json'
                }
            },
            serverPaging: true,
            pageSize: @Model.ItemsPerPage,
            schema: {
                data: "Data", // records are returned in the "data" field of the response
                total: "TotalCount" // total number of records is in the "total" field of the response
            }
        });
       $('#search-results').kendoListView({
           dataSource: dataSource,
           template: kendo.template($("#template").html()),
           pageable: true
       });
       $("#pager").kendoPager({
           dataSource: dataSource
       });

       //Dropdownlist Selectedchange event
       $("#UserSort").change(function (value) {
           var selectedValue = $(value.currentTarget).val();
           var listView = $('#search-results').data("kendoListView");
           listView.dataSource.transport.options.read.url =
               '@Url.Action("Results", "SearchResults", new {searchQuery = Request.QueryString["searchQuery"], indexCatalogue = Request.QueryString["indexCatalogue"]})' + '/' + selectedValue;

            //Read data source to update
            listView.dataSource.read();
        })
   });
</script>