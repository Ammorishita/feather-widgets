@model Telerik.Sitefinity.Frontend.Search.Mvc.Models.ISearchBoxModel

@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;

@{
    var searchTextBoxId = Guid.NewGuid();
    var searchButtonId = Guid.NewGuid();
 }

@(!String.IsNullOrEmpty(Model.CssClass) ?
    Html.Raw(String.Format("<div class=\"{0}\">", Model.CssClass)) :
    Html.Raw("<div>"))
    <input type="text" id="@Html.Raw(searchTextBoxId)" value="@Html.Raw(ViewBag.SearchQuery)"/>
    <button type="button" id="@Html.Raw(searchButtonId)">@Html.Resource("SearchLabel")</button>
</div>

@* Avoid conflicts because the designer is loading kendo too. *@
@if (!SystemManager.IsDesignMode)
{
    @Html.Script(ScriptRef.JQuery)
    @Html.Script(ScriptRef.KendoWeb)   
}

<script>
    jQuery(function () {
        /* Model variables */
        var resultsUrl = '@Html.Raw(Model.ResultsUrl)',
            indexCatalogue = '@Html.Raw(Model.IndexCatalogue)',
            wordsMode = '@Html.Raw(Model.WordsMode.ToString())',
            disableSuggestions = @(Model.DisableSuggestions ? Html.Raw("true") : Html.Raw("false")),
            minSuggestionLength = '@Html.Raw(Model.MinSuggestionLength)',
            suggestionFields = '@Html.Raw(Model.SuggestionFields)',
            language = '@Html.Raw(Model.Language)',
            suggestionsRoute = '@Html.Raw(Model.SuggestionsRoute)';
        
        /* jQuery elements */
        var searchTextBox = $('#' + '@Html.Raw(searchTextBoxId)'),
            searchButton = $('#' + '@Html.Raw(searchButtonId)');

        /* Initialization */
        searchButton.click(function (e) {
            navigateToResults(e);
        });

        searchTextBox.keypress(keypressHandler);

        if (!disableSuggestions) {
            searchTextBox.keyup(keyupHandler);

            try {
                searchTextBox.kendoAutoComplete({
                    dataSource:
                        {
                            serverFiltering: true,
                            data: []
                        },
                    select: function (e) {
                        searchTextBox.val(this.dataItem(e.item.index()));
                        navigateToResults(e);
                    },
                    minLength: minSuggestionLength
                });
            } catch (e) {
                // Fixes jQuery bug, causing IE7 to throw error "script3 member not found".
                // The try/catch can be removed when the bug is fixed.
            }
        }

        /* Event handlers */
        function keypressHandler(e) {
            if (!e) var e = window.event;

            var keyCode = null;
            if (e.keyCode) {
                keyCode = e.keyCode;
            }
            else {
                keyCode = e.charCode;
            }

            if (keyCode == 13) {
                navigateToResults(e);
            }
        }

        function suggestionsSuccessHandler(result, args) {
            var dataSource = new kendo.data.DataSource({
                serverFiltering: true,
                data: result.Suggestions
            });

            var autocomplete = searchTextBox.data("kendoAutoComplete");
            autocomplete.setDataSource(dataSource);

            autocomplete.search(searchTextBox.val().trim());
        }

        function keyupHandler(e) {
            if (e.keyCode != 38 // up arrow
                && e.keyCode != 40 // down arrow
                && e.keyCode != 27) { // esc
                // When the auto complete menu is shown, only this event is detected
                if (e.keyCode == 13) {
                    // when enter is pressed
                    navigateToResults(e);
                }

                var request = {};
                var searchText = searchTextBox.val().trim();
                if (searchText.length >= minSuggestionLength) {
                    request.IndexName = indexCatalogue;
                    request.SuggestionFields = suggestionFields;
                    request.Text = searchText;
                    request.Language = language;

                    $.ajax({
                        type: "GET",
                        url: suggestionsRoute,
                        dataType: 'json',
                        data: request,
                        success: suggestionsSuccessHandler
                    });
                }
            }
        }
            
        /* Helper methods */
        function navigateToResults(e) {
            if (!e) var e = window.event;

            if (e.stopPropagation) {
                e.stopPropagation();
            }
            else {
                e.cancelBubble = true;
            }
            if (e.preventDefault) {
                e.preventDefault();
            }
            else {
                e.returnValue = false;
            }

            var query = searchTextBox.val();

            if (query && query.trim() && indexCatalogue) {
                sendSentence();
                window.location = getLocation();
            }
        }

        function getLocation() {
            var query = searchTextBox.val().trim();

            var separator = (resultsUrl.indexOf("?") == -1) ? "?" : "&";

            var catalogueParam = separator + "indexCatalogue=" + encodeURIComponent(indexCatalogue),
                searchQueryParam = "&searchQuery=" + encodeURIComponent(query),
                wordsModeParam = "&wordsMode=" + wordsMode;

            var url = resultsUrl + catalogueParam + searchQueryParam + wordsModeParam;

            return url;
        }

        function sendSentence() {
            if (window.DataIntelligenceSubmitScript) {
                DataIntelligenceSubmitScript._client.sentenceClient.writeSentence({
                    predicate: "Search for",
                    object: searchButton.val(),
                    objectMetadata: [{
                        'K': 'PageUrl',
                        'V': location.href
                    }]
                });
            }
        }
    });
</script>
